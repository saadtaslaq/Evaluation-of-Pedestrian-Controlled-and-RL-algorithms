[map]
use_grid_map = false
map_size_m = 14
submap_size_m = 6
map_resolution = 0.1
angular_map_max_range = 6
num_circles = 0
num_walls = 0
map_width = 60
map_height = 60
angular_map_dim = 72
angle_min = -1
angle_max = 1

[env]
time_limit = 50
time_step = 0.2
val_size = 50
test_size = 100
randomize_attributes = true
train_val_sim = circle_crossing
test_sim = circle_crossing
square_width = 10
circle_radius_min = 4
human_num = 7
robot_num = 0
random_policy_changing = false
#Can be chosen between orca, sdoadrl, sarl, cadrl_original, random, linear, social_forces
human_policy = social_forces

#For sdoadrl: ~/soadrl/Final_models/angular_map_full_FOV
#For cadrl: ~/soadrl/Orig_models/output_cadrl_orig
#For orca: Value does not matter - fixed policy
#For sarl: ~/soadrl/Orig_models/output_sarl2
human_model_dir = ~/soadrl/Orig_models/output_sarl2

[reward]
success_reward = 10
# old value is 1
collision_penalty = -20
# old value is -0.25
discomfort_dist = 0.2
# old value is 0.2
discomfort_penalty_factor = 0.5
# old value is 0.5
timeout_penalty = 0
# old value is 0- I adjusted this to a random value
rotation_penalty_factor = 0
# old value is -0.003

[humans]
visible = false
policy = orca
radius = 0.3
v_pref = 1
FOV = 2
random_goal_changing = true
goal_change_chance = 0.25
end_goal_changing = true
end_goal_change_chance = 1.0

[robot]
visible = false
radius = 0.3
v_pref = 1
FOV = 0.4333333333
# old value is 2 (meaning 360 degrees) new value is 78 degrees


[imitation_learning]
il_episodes_per_iteration = 500
il_iterations = 10
il_policy = orca
il_epochs = 50
il_learning_rate = 0.0001
# increase the safety space in ORCA demonstration for robot
safety_space = 0.15
batch_size = 100
capacity = 500000


[rl]
rl_learning_rate = 0.00002
# number of batches to train at the end of training episode
train_batches = 100
# training episodes in outer loop
train_episodes = 500000
# number of time steps before performing an update
sample_episodes = 5
gamma = 0.99 #old value is 0.9

[action_space]
# action space size is speed_samples * rotation_samples + 1
speed_samples = 4
rotation_samples = 7
# Rotational values are divided by this value to allow smaller rotation
rotation_factor = 1.0

[sarl]
cell_num = 4
cell_size = 1
om_channel_size = 3
with_om = true
with_global_state = true

